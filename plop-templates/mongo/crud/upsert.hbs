import { FieldResolveInput, FieldResolveOutput } from "@aexol/gaffer-js";
import { {{collection}} } from "../db/collections";
import { DB } from "../db/mongo";
import { Mutation, ResolverType } from "../graphql-zeus";
import { Utils } from "../Utils";

export const handler = async (
  input: FieldResolveInput,
): Promise<FieldResolveOutput> => {
  try {
    const { {{pk}},...args } = input.arguments as ResolverType<Mutation["{{upsert}}"]>
    const db = await DB();
    const col = await db.collection({{collection}});
    const o = await col.findOneAndUpdate(
      { {{pk}} },
      { $set: args },
      { upsert: true },
    );
    return {
      response: Utils.mongoToGraphQL(o),
    };
  } catch (error) {
    return { error };
  }
};
