import { FieldResolveInput, FieldResolveOutput } from "@aexol/gaffer-js";
import { {{collection}} } from "../db/collections";
import { DB } from "../db/mongo";
import { {{type}}, Mutation, ResolverType } from "../graphql-zeus";
import { Utils } from "../Utils";

export const handler = async (
  input: FieldResolveInput,
): Promise<FieldResolveOutput> => {
  try {
    const args = input.arguments as ResolverType<Mutation["{{create}}"]>;
    const db = await DB();
    const col = await db.collection({{collection}});
    const inserted = await col.insertOne(args.{{input}});
    return {
      response: Utils.mongoToGraphQL<{{type}}>({
        ...args.{{input}},
        id: inserted.insertedId,
      }),
    };
  } catch (error) {
    return { error };
  }
};