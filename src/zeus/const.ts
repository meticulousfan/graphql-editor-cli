/* eslint-disable */

export const AllTypesProps: Record<string,any> = {
	RFC3339Date: "String",
	ProjectOps:{
		deployCodeToCloud:{
			input:{
				type:"DeployCodeToCloudInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		removeSources:{
			files:{
				type:"String",
				array:true,
				arrayRequired:false,
				required:true
			}
		},
		renameSources:{
			files:{
				type:"RenameFileInput",
				array:true,
				arrayRequired:false,
				required:true
			}
		},
		update:{
			in:{
				type:"UpdateProject",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	UpdateProject:{
		project:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		tags:{
			type:"String",
			array:true,
			arrayRequired:false,
			required:true
		},
		public:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Team:{
		member:{
			username:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		members:{
			last:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:false
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	ChangeSubscriptionInput:{
		subscriptionID:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:true
		},
		subscriptionPlanID:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ProjectsSortInput:{
		createdAt:{
			type:"SortOrder",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"SortOrder",
			array:false,
			arrayRequired:false,
			required:false
		},
		id:{
			type:"SortOrder",
			array:false,
			arrayRequired:false,
			required:false
		},
		owner:{
			type:"SortOrder",
			array:false,
			arrayRequired:false,
			required:false
		},
		public:{
			type:"SortOrder",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"SortOrder",
			array:false,
			arrayRequired:false,
			required:false
		},
		tags:{
			type:"SortOrder",
			array:false,
			arrayRequired:false,
			required:false
		},
		team:{
			type:"SortOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	TeamOps:{
		addMember:{
			username:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			},
			role:{
				type:"Role",
				array:false,
				arrayRequired:false,
				required:true
			},
			loginCallback:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		createProject:{
			public:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			},
			name:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		member:{
			username:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		members:{
			last:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:false
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		project:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		}
	},
	RenameFileInput:{
		dst:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		src:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	Role: "enum",
	MemberOps:{
		update:{
			role:{
				type:"Role",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	FileServerCredentials: "String",
	PredictCheckoutInput:{
		quantity:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		coupon:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		planID:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	DeployCodeToCloudURIKind: "enum",
	Decimal: "String",
	DeployCodeToCloudEnv: "enum",
	Namespace:{
		project:{
			name:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		projects:{
			last:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:false
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	VatInput:{
		number:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		companyName:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		street:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		city:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		state:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		country:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		postCode:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	DeployCodeToCloudInput:{
		codeURI:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		kind:{
			type:"DeployCodeToCloudURIKind",
			array:false,
			arrayRequired:false,
			required:false
		},
		env:{
			type:"DeployCodeToCloudEnv",
			array:false,
			arrayRequired:false,
			required:false
		},
		secrets:{
			type:"Secret",
			array:true,
			arrayRequired:false,
			required:true
		},
		node14Opts:{
			type:"DeployCodeToCloudNode14Opts",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Query:{
		checkoutData:{
			data:{
				type:"CheckoutDataInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		fileServerCredentials:{
			project:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		findProjects:{
			query:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			},
			last:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:false
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		findProjectsByTag:{
			tag:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			},
			last:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:false
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getNamespace:{
			slug:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		getProject:{
			project:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		getTeam:{
			name:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		getUser:{
			username:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		listProjects:{
			owned:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			},
			last:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:false
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			sort:{
				type:"ProjectsSortInput",
				array:true,
				arrayRequired:false,
				required:false
			}
		},
		myTeams:{
			last:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:false
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		predictCheckout:{
			data:{
				type:"PredictCheckoutInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		}
	},
	SortOrder: "enum",
	CustomerInput:{
		postCode:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		marketingConsent:{
			type:"Boolean",
			array:false,
			arrayRequired:false,
			required:false
		},
		email:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		country:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Secret:{
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		value:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Project:{
		sources:{
			last:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:false
			},
			limit:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	PaymentDate: "String",
	Mutation:{
		changeSubscription:{
			in:{
				type:"ChangeSubscriptionInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		createCloudDeployment:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		createProject:{
			public:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			},
			name:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		createTeam:{
			namespace:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			},
			name:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		createUser:{
			namespace:{
				type:"String",
				array:false,
				arrayRequired:false,
				required:true
			},
			public:{
				type:"Boolean",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		deployCodeToCloud:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			},
			opts:{
				type:"DeployCodeToCloudInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deployToFaker:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		removeProject:{
			project:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		sync:{
			source:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			},
			target:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		team:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateProject:{
			in:{
				type:"UpdateProject",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		updateSources:{
			sources:{
				type:"NewSource",
				array:true,
				arrayRequired:false,
				required:true
			},
			project:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		}
	},
	DeployCodeToCloudNode14Opts:{
		buildScript:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	AccountType: "enum",
	CheckoutDataInput:{
		planID:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		},
		quantity:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		customer:{
			type:"CustomerInput",
			array:false,
			arrayRequired:false,
			required:false
		},
		vat:{
			type:"VatInput",
			array:false,
			arrayRequired:false,
			required:false
		},
		coupon:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		successURL:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		cancelURL:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	NewSource:{
		contentType:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		checksum:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		filename:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		contentLength:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	}
}

export const ReturnTypes: Record<string,any> = {
	FakerSourceConnection:{
		pageInfo:"PageInfo",
		sources:"FakerSource"
	},
	ProjectOps:{
		createCloudDeployment:"String",
		delete:"Boolean",
		deployCodeToCloud:"String",
		deployToFaker:"Boolean",
		removeSources:"Boolean",
		renameSources:"Boolean",
		update:"Boolean"
	},
	TeamConnection:{
		pageInfo:"PageInfo",
		teams:"Team"
	},
	Team:{
		id:"ID",
		member:"Member",
		members:"MemberConnection",
		name:"String",
		namespace:"Namespace",
		planID:"Int"
	},
	ProjectConnection:{
		pageInfo:"PageInfo",
		projects:"Project"
	},
	Subscription:{
		cancelURL:"String",
		expiration:"String",
		quantity:"Int",
		seats:"UserConnection",
		status:"String",
		subscriptionID:"Int",
		subscriptionPlanID:"Int",
		updateURL:"String"
	},
	UserConnection:{
		pageInfo:"PageInfo",
		users:"User"
	},
	TeamOps:{
		addMember:"Member",
		createProject:"Project",
		delete:"Boolean",
		id:"ID",
		member:"MemberOps",
		members:"MemberConnection",
		name:"String",
		namespace:"Namespace",
		planID:"Int",
		project:"ProjectOps"
	},
	MemberOps:{
		delete:"Boolean",
		update:"Boolean"
	},
	MemberConnection:{
		members:"Member",
		pageInfo:"PageInfo"
	},
	FakerSource:{
		checksum:"String",
		contents:"String",
		filename:"String",
		getUrl:"String"
	},
	Member:{
		email:"String",
		role:"Role",
		username:"String"
	},
	SubscriptionConnection:{
		pageInfo:"PageInfo",
		subscriptions:"Subscription"
	},
	Payment:{
		amount:"Decimal",
		currency:"String",
		date:"PaymentDate",
		receiptURL:"String",
		subscriptionID:"Int"
	},
	Namespace:{
		project:"Project",
		projects:"ProjectConnection",
		public:"Boolean",
		slug:"String"
	},
	Endpoint:{
		uri:"String"
	},
	User:{
		accountType:"AccountType",
		id:"ID",
		namespace:"Namespace",
		subscriptions:"SubscriptionConnection",
		username:"String"
	},
	Query:{
		checkoutData:"String",
		emailVerified:"Boolean",
		fileServerCredentials:"FileServerCredentials",
		findProjects:"ProjectConnection",
		findProjectsByTag:"ProjectConnection",
		getNamespace:"Namespace",
		getProject:"Project",
		getTeam:"Team",
		getUser:"User",
		listProjects:"ProjectConnection",
		myTeams:"TeamConnection",
		payments:"Payment",
		predictCheckout:"PredictCheckout"
	},
	PageInfo:{
		last:"String",
		limit:"Int",
		next:"Boolean"
	},
	Header:{
		key:"String",
		value:"String"
	},
	Project:{
		createdAt:"RFC3339Date",
		description:"String",
		enabled:"Boolean",
		endpoint:"Endpoint",
		id:"ID",
		inCloud:"Boolean",
		mocked:"Boolean",
		name:"String",
		owner:"User",
		public:"Boolean",
		slug:"String",
		sources:"FakerSourceConnection",
		tags:"String",
		team:"Team"
	},
	PredictCheckout:{
		price:"Float",
		trialDays:"Int"
	},
	Mutation:{
		changeSubscription:"Boolean",
		createCloudDeployment:"String",
		createProject:"Project",
		createTeam:"TeamOps",
		createUser:"User",
		deleteAccount:"Boolean",
		deployCodeToCloud:"String",
		deployToFaker:"Boolean",
		removeProject:"Boolean",
		sync:"Boolean",
		team:"TeamOps",
		updateProject:"Boolean",
		updateSources:"SourceUploadInfo"
	},
	SourceUploadInfo:{
		filename:"String",
		headers:"Header",
		putUrl:"String"
	}
}